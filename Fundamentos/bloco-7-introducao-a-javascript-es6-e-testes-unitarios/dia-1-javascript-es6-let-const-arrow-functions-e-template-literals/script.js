// const testingScope = (escopo) => {
//   if (escopo === true) {
//     let ifScope = "N√£o devo ser utilizada fora do meu escopo (if)";
//     ifScope = ifScope + " √≥timo, fui utilizada no escopo !";
//     console.log(ifScope);
//   } else {
//     let elseScope = "N√£o devo ser utilizada fora meu escopo (else)";
//     console.log(elseScope);
//   }
  
// };

// testingScope(false);

// const oddsAndEvens = [13, 3, 4, 10, 7, 2];

// Seu c√≥digo aqui.

// const eventSort = (a,b) =>  a - b

// console.log(`Os n√∫meros ${oddsAndEvens.sort(eventSort)} se encontram ordenados em ordem crescente`);

 // ser√° necess√°rio alterar essa linha üòâ

//  Abaixo, voc√™ ver√° algumas especifica√ß√µes de algoritmos para desenvolver. √â fundamental que voc√™ utilize o que aprendeu sobre let, const, arrow functions, template literals e ternary operator.
//  Crie uma fun√ß√£o que receba um n√∫mero e retorne seu fatorial.
//  Na matem√°tica, o fatorial de um n√∫mero inteiro e positivo N, representado por N!, √© o produto de todos os seus antecessores at√© o n√∫mero um. Exemplo: 4! = 4 * 3 * 2 * 1 = 24.
 
 
// const fatorial = (num) => {
//     let resultado = 1;
//     for(let index = 1; index <= num; index += 1){
//         resultado = resultado * index
//     }
//     return resultado
// }

// console.log(fatorial(10));

// 2. Crie uma fun√ß√£o que receba uma frase e retorne a maior palavra.
// Exemplo:
// Copiar
//       longestWord('Ant√¥nio foi no banheiro e n√£o sabemos o que aconteceu') // retorna 'aconteceu'

// const maiorPalavra = (palavra) => {
//     first = palavra.split(' ');
//     result = '';

//     for(let word in first){
//         if(first[word].length > result.length)
//             result = first[word] 
//     }
//     return result
// }

// console.log(maiorPalavra('Ant√¥nio foi no banheiro e n√£o sabemos o que aconteceu'));

// 3.üöÄ Crie uma p√°gina com um contador de cliques
// Sua p√°gina deve conter:
// Um bot√£o ao qual ser√° associado um event listener;
// Uma vari√°vel clickCount no arquivo JavaScript que acumule o n√∫mero de clicks no bot√£o;
// Um campo no HTML que v√° atualizando a quantidade de clicks no bot√£o conforme a vari√°vel clickCount √© atualizada.


